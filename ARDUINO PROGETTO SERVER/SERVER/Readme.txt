For the project we have used the following libraries:
ESP8266WiFi.h
WiFiClientSecure.h
UniversalTelegramBot.h
You can download them from Arduino directly.

From line 6 to 12 you can see where to put your wifi name and password and the various addresses for the connection configuration.
You must write the same ip for the server and client to make them connect.
For gateway and subnet addresses you can see them by pc.(On Windows go to cmd and type "ipconfig /all")
For the dns address you have to put the same dns address of your net. (On Windows you can find it in the net details for controll panel)


From 15 to 18 there are the bot configuration. The BOT_TOKEN has to be generated by the BotFather from Telegram.

In the SETUP you can find the connection to wifi part. 
In line 72 you set the connection with your staticIp, gateway, subnet and dns typed in line 6 to 12.
Then the Esp8266 will remain in the line 79 loop while untill the connection is set.

From line 89 there is the LOOP part. It controls every loop if the client is connected or not.
After this, it sees how many new messages are in the chat.
From 94 it sees if the client sent something and if it did, the server will send the message by the bot.

In the last two lines you find the handler of the messagges by us and the a checking about the global variable string.

The bot function is written from line 25 in handleNewMessages function.
It is thought to handle just "/start" and "/sleep" messagges and you can imagine their meaning.

In the Bot part notice that we refer to 3 global variable from line 21 to 23.
string is used like a status variable. (It is "start" or "sleep" depends on what you typed in chat)(Notice that it answers just one time if you don't change the state)
check is used to avoid multiple answers in case of a lot of "/start" or "/sleep" messagges.
chatid is the chat where the bot is called. (Notice that you can just save one id so just one person can use te bot eveerytime)
